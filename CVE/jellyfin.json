{
  "app_name": "Jellyfin",
  "last_updated": "2025-05-05",
  "vulnerabilities": [
    {
      "cve_id": "CVE-2024-43801",
      "published_date": "2024-09-02",
      "last_modified_date": "2024-11-21",
      "base_score": 4.6,
      "severity": "MEDIUM",
      "description": "Jellyfin is an open source self hosted media server. The Jellyfin user profile image upload accepts SVG files, allowing for a stored XSS attack against an admin user via a specially crafted malicious SVG file. When viewed by an admin outside of the Jellyfin Web UI (e.g. via \"view image\" in a browser), this malicious SVG file could interact with the browser's LocalStorage and retrieve an AccessToken, which in turn can be used in an API call to elevate the target user to a Jellyfin administrator. The actual attack vector is unlikely to be exploited, as it requires specific actions by the administrator to view the SVG image outside of Jellyfin's WebUI, i.e. it is not a passive attack. The underlying exploit mechanism is solved by PR #12490, which forces attached images (including the potential malicious SVG) to be treated as attachments and thus downloaded by browsers, rather than viewed. This prevents exploitation of the LocalStorage of the browser. This PR has been merged and the relevant code changes are included in release version 10.9.10. All users are advised to upgrade.",
      "cpe_name": "cpe:2.3:a:jellyfin:jellyfin:10.8.13:*:*:*:*:*:*:*"
    },
    {
      "cve_id": "CVE-2023-48702",
      "published_date": "2023-12-13",
      "last_modified_date": "2024-11-21",
      "base_score": 7.2,
      "severity": "HIGH",
      "description": "Jellyfin is a system for managing and streaming media. Prior to version 10.8.13, the `/System/MediaEncoder/Path` endpoint executes an arbitrary file using `ProcessStartInfo` via the `ValidateVersion` function. A malicious administrator can setup a network share and supply a UNC path to `/System/MediaEncoder/Path` which points to an executable on the network share, causing Jellyfin server to run the executable in the local context. The endpoint was removed in version 10.8.13.",
      "cpe_name": "cpe:2.3:a:jellyfin:jellyfin:10.8.12:*:*:*:*:*:*:*"
    },
    {
      "cve_id": "CVE-2023-49096",
      "published_date": "2023-12-06",
      "last_modified_date": "2024-11-21",
      "base_score": 7.7,
      "severity": "HIGH",
      "description": "Jellyfin is a Free Software Media System for managing and streaming media. In affected versions there is an argument injection in the VideosController, specifically the `/Videos/<itemId>/stream` and `/Videos/<itemId>/stream.<container>` endpoints which are present in the current Jellyfin version. Additional endpoints in the AudioController might also be vulnerable, as they differ only slightly in execution. Those endpoints are reachable by an unauthenticated user. In order to exploit this vulnerability an unauthenticated attacker has to guess an itemId, which is a completely random GUID. It\u2019s a very unlikely case even for a large media database with lots of items. Without an additional information leak, this vulnerability shouldn\u2019t be directly exploitable, even if the instance is reachable from the Internet. There are a lot of query parameters that get accepted by the method. At least two of those, videoCodec and audioCodec are vulnerable to the argument injection. The values can be traced through a lot of code and might be changed in the process. However, the fallback is to always use them as-is, which means we can inject our own arguments. Those arguments land in the command line of FFmpeg. Because UseShellExecute is always set to false, we can\u2019t simply terminate the FFmpeg command and execute our own. It should only be possible to add additional arguments to FFmpeg, which is powerful enough as it stands. There is probably a way of overwriting an arbitrary file with malicious content. This vulnerability has been addressed in version 10.8.13. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
      "cpe_name": "cpe:2.3:a:jellyfin:jellyfin:10.8.12:*:*:*:*:*:*:*"
    },
    {
      "cve_id": "CVE-2023-30626",
      "published_date": "2023-04-24",
      "last_modified_date": "2024-11-21",
      "base_score": 8.8,
      "severity": "HIGH",
      "description": "Jellyfin is a free-software media system. Versions starting with 10.8.0 and prior to 10.8.10 and prior have a directory traversal vulnerability inside the `ClientLogController`, specifically `/ClientLog/Document`. When combined with a cross-site scripting vulnerability (CVE-2023-30627), this can result in file write and arbitrary code execution. Version 10.8.10 has a patch for this issue. There are no known workarounds.",
      "cpe_name": "cpe:2.3:a:jellyfin:jellyfin:10.8.9:*:*:*:*:*:*:*"
    },
    {
      "cve_id": "CVE-2023-30627",
      "published_date": "2023-04-24",
      "last_modified_date": "2024-11-21",
      "base_score": 9.0,
      "severity": "CRITICAL",
      "description": "jellyfin-web is the web client for Jellyfin, a free-software media system. Starting in version 10.1.0 and prior to version 10.8.10, a stored cross-site scripting vulnerability in device.js can be used to make arbitrary calls to the `REST` endpoints with admin privileges. When combined with CVE-2023-30626, this results in remote code execution on the Jellyfin instance in the context of the user who's running it. This issue is patched in version 10.8.10. There are no known workarounds.",
      "cpe_name": "cpe:2.3:a:jellyfin:jellyfin:10.8.9:*:*:*:*:*:*:*"
    }
  ]
}