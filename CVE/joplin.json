{
  "app_name": "Joplin",
  "last_updated": "2025-05-05",
  "vulnerabilities": [
    {
      "cve_id": "CVE-2025-24028",
      "published_date": "2025-02-07",
      "last_modified_date": "2025-04-18",
      "base_score": 7.8,
      "severity": "HIGH",
      "description": "Joplin is a free, open source note taking and to-do application, which can handle a large number of notes organised into notebooks. This vulnerability is caused by differences between how Joplin's HTML sanitizer handles comments and how the browser handles comments. This affects both the Rich Text Editor and the Markdown viewer. However, unlike the Rich Text Editor, the Markdown viewer is `cross-origin isolated`, which prevents JavaScript from directly accessing functions/variables in the toplevel Joplin `window`. This issue is not present in Joplin 3.1.24 and may have been introduced in `9b50539`. This is an XSS vulnerability that impacts users that open untrusted notes in the Rich Text Editor. This vulnerability has been addressed in version 3.2.12 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
      "cpe_name": "cpe:2.3:a:joplin_project:joplin:3.0.15:*:*:*:*:-:*:*"
    },
    {
      "cve_id": "CVE-2025-25187",
      "published_date": "2025-02-07",
      "last_modified_date": "2025-04-11",
      "base_score": 7.8,
      "severity": "HIGH",
      "description": "Joplin is a free, open source note taking and to-do application, which can handle a large number of notes organised into notebooks. This vulnerability is caused by adding note titles to the document using React's `dangerouslySetInnerHTML`, without first escaping HTML entities. Joplin lacks a Content-Security-Policy with a restrictive `script-src`. This allows arbitrary JavaScript execution via inline `onclick`/`onload` event handlers in unsanitized HTML. Additionally, Joplin's main window is created with `nodeIntegration` set to `true`, allowing arbitrary JavaScript execution to result in arbitrary code execution. Anyone who 1) receives notes from unknown sources and 2) uses <kbd>ctrl</kbd>-<kbd>p</kbd> to search is impacted. This issue has been addressed in version 3.1.24 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
      "cpe_name": "cpe:2.3:a:joplin_project:joplin:3.0.15:*:*:*:*:-:*:*"
    },
    {
      "cve_id": "CVE-2024-55630",
      "published_date": "2025-02-07",
      "last_modified_date": "2025-04-18",
      "base_score": 3.3,
      "severity": "LOW",
      "description": "Joplin is a free, open source note taking and to-do application, which can handle a large number of notes organised into notebooks. Joplin's HTML sanitizer allows the `name` attribute to be specified. If `name` is set to the same value as an existing `document` property (e.g. `querySelector`), that property is replaced with the element. This vulnerability's only known impact is denial of service. The note viewer fails to refresh until closed and re-opened with a different note. This issue has been addressed in version 3.2.8 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
      "cpe_name": "cpe:2.3:a:joplin_project:joplin:3.0.15:*:*:*:*:-:*:*"
    },
    {
      "cve_id": "CVE-2024-40643",
      "published_date": "2024-09-09",
      "last_modified_date": "2024-09-17",
      "base_score": 9.6,
      "severity": "CRITICAL",
      "description": "Joplin is a free, open source note taking and to-do application. Joplin fails to take into account that \"<\" followed by a non letter character will not be considered html. As such it is possible to do an XSS by putting an \"illegal\" tag within a tag.",
      "cpe_name": "cpe:2.3:a:joplin_project:joplin:-:*:*:*:*:-:*:*"
    },
    {
      "cve_id": "CVE-2023-38506",
      "published_date": "2024-06-21",
      "last_modified_date": "2025-04-11",
      "base_score": 8.2,
      "severity": "HIGH",
      "description": "Joplin is a free, open source note taking and to-do application. A Cross-site Scripting (XSS) vulnerability allows pasting untrusted data into the rich text editor to execute arbitrary code. HTML pasted into the rich text editor is not sanitized (or not sanitized properly). As such, the `onload` attribute of pasted images can execute arbitrary code. Because the TinyMCE editor frame does not use the `sandbox` attribute, such scripts can access NodeJS's `require` through the `top` variable. From this, an attacker can run arbitrary commands. This issue has been addressed in version 2.12.10 and users are advised to upgrade. There are no known workarounds for this vulnerability.",
      "cpe_name": "cpe:2.3:a:joplin_project:joplin:-:*:*:*:*:-:*:*"
    }
  ]
}