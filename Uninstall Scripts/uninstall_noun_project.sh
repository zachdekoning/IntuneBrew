#!/bin/bash
# Uninstall script for Noun Project
# Generated by IntuneBrew

# Exit on error
set -e

echo "Uninstalling Noun Project..."

# Check if running as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root"
  exit 1
fi

# Kill application process if running
echo "Stopping Noun Project if running..."
pkill -f "Noun Project" 2>/dev/null || true

# Remove /Applications/Noun Project.app
echo "Removing /Applications/Noun Project.app..."
if [ -d "/Applications/Noun Project.app" ]; then
    rm -rf "/Applications/Noun Project.app" 2>/dev/null || true
elif [ -f "/Applications/Noun Project.app" ]; then
    rm -f "/Applications/Noun Project.app" 2>/dev/null || true
fi

# Remove $HOME/Library/Application Support/com.thenounproject.Noun-Project
echo "Removing $HOME/Library/Application Support/com.thenounproject.Noun-Project..."
if [ -d "$HOME/Library/Application Support/com.thenounproject.Noun-Project" ]; then
    rm -rf "$HOME/Library/Application Support/com.thenounproject.Noun-Project" 2>/dev/null || true
elif [ -f "$HOME/Library/Application Support/com.thenounproject.Noun-Project" ]; then
    rm -f "$HOME/Library/Application Support/com.thenounproject.Noun-Project" 2>/dev/null || true
fi

# Remove $HOME/Library/Caches/com.thenounproject.Noun-Project
echo "Removing $HOME/Library/Caches/com.thenounproject.Noun-Project..."
if [ -d "$HOME/Library/Caches/com.thenounproject.Noun-Project" ]; then
    rm -rf "$HOME/Library/Caches/com.thenounproject.Noun-Project" 2>/dev/null || true
elif [ -f "$HOME/Library/Caches/com.thenounproject.Noun-Project" ]; then
    rm -f "$HOME/Library/Caches/com.thenounproject.Noun-Project" 2>/dev/null || true
fi

# Remove $HOME/Library/HTTPStorages/com.thenounproject.Noun-Project
echo "Removing $HOME/Library/HTTPStorages/com.thenounproject.Noun-Project..."
if [ -d "$HOME/Library/HTTPStorages/com.thenounproject.Noun-Project" ]; then
    rm -rf "$HOME/Library/HTTPStorages/com.thenounproject.Noun-Project" 2>/dev/null || true
elif [ -f "$HOME/Library/HTTPStorages/com.thenounproject.Noun-Project" ]; then
    rm -f "$HOME/Library/HTTPStorages/com.thenounproject.Noun-Project" 2>/dev/null || true
fi

# Remove $HOME/Library/Preferences/com.thenounproject.Noun-Project.plist
echo "Removing $HOME/Library/Preferences/com.thenounproject.Noun-Project.plist..."
if [ -d "$HOME/Library/Preferences/com.thenounproject.Noun-Project.plist" ]; then
    rm -rf "$HOME/Library/Preferences/com.thenounproject.Noun-Project.plist" 2>/dev/null || true
elif [ -f "$HOME/Library/Preferences/com.thenounproject.Noun-Project.plist" ]; then
    rm -f "$HOME/Library/Preferences/com.thenounproject.Noun-Project.plist" 2>/dev/null || true
fi

# Remove $HOME/Library/Saved Application State/com.thenounproject.Noun-Project.savedState
echo "Removing $HOME/Library/Saved Application State/com.thenounproject.Noun-Project.savedState..."
if [ -d "$HOME/Library/Saved Application State/com.thenounproject.Noun-Project.savedState" ]; then
    rm -rf "$HOME/Library/Saved Application State/com.thenounproject.Noun-Project.savedState" 2>/dev/null || true
elif [ -f "$HOME/Library/Saved Application State/com.thenounproject.Noun-Project.savedState" ]; then
    rm -f "$HOME/Library/Saved Application State/com.thenounproject.Noun-Project.savedState" 2>/dev/null || true
fi

echo "Uninstallation complete!"
exit 0
